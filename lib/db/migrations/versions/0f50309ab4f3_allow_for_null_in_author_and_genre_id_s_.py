"""Allow for null in author and genre id's for book table.

Revision ID: 0f50309ab4f3
Revises: a5397ba4e7e2
Create Date: 2023-08-19 03:13:56.689161

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0f50309ab4f3'
down_revision: Union[str, None] = 'a5397ba4e7e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('new_books',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=True),
        sa.Column('genre_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
        sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('books')
    op.rename_table('new_books', 'books')
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('new_books',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('genre_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
        sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('books')
    op.rename_table('new_books', 'books')
    # ### end Alembic commands ###

